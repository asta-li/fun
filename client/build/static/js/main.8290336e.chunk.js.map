{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","PureComponent","Game","state","history","Array","fill","stepNumber","xIsNext","date","time","text","slice","length","calculateWinner","setState","concat","step","fetch","then","response","json","data","console","log","Date","Time","Text","catch","error","status","current","winner","moves","map","board","move","desc","prevBoard","prevSquares","row","Math","floor","col","Error","findChangedMove","fontWeight","jumpTo","style","handleClick","Component","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8290336e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.PureComponent {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      date: \"\",\n      time: \"\",\n      text: \"\",\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n        return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  componentDidMount() {\n    // const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\n    const apiUrl = 'http://192.168.1.9:3000/test';\n    fetch(apiUrl)\n      .then(response => response.json())\n      // .then(data => this.setState({ data }));\n      .then(data => {\n        console.log('This is your data', data);\n        this.setState({ \n          date: data.Date,\n          time: data.Time,\n          text: data.Text,\n        });\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  } \n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    // Map over each element in the board history.\n    // The first parameter is the board and the second parameter is the index.\n    const moves = history.map((board, move) => {\n      let desc;\n      if (move > 0) {\n        const prevBoard = history[move - 1];\n        const { row, col } = findChangedMove(board.squares, prevBoard.squares);\n        desc = 'Go to move #' + move + ' (' + row + ', ' + col + ')';\n      } else {\n        desc = 'Go to game start';\n      }\n      const fontWeight = move === this.state.stepNumber ? 'bold' : 'normal';\n      return (\n        <li key={move}>\n          <button\n            onClick={() => this.jumpTo(move)}\n            style={{fontWeight : fontWeight}}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (this.state.stepNumber === 9) {\n      status = 'Game ends in a draw.';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{this.state.date}</div>\n          <div>{this.state.time}</div>\n          <div>{this.state.text}</div>\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction findChangedMove(squares, prevSquares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] !== prevSquares[i]) {\n      const row = Math.floor(i / 3);\n      const col = i % 3;\n      return {row, col};\n    }\n  }\n  throw new Error(\"Not possible\");\n}\n\n"],"sourceRoot":""}