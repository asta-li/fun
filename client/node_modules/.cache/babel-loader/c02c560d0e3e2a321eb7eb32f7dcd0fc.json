{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/asta/fun/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.PureComponent {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      date: \"\",\n      time: \"\",\n      text: \"\"\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.stepNumber !== nextState.stepNumber) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  componentDidMount() {\n    // const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\n    const apiUrl = 'http://192.168.1.9:3000/test';\n    fetch(apiUrl).then(response => response.json()) // .then(data => this.setState({ data }));\n    .then(data => {\n      console.log('This is your data', data);\n      this.setState({\n        date: data.Date,\n        time: data.Time,\n        text: data.Text\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares); // Map over each element in the board history.\n    // The first parameter is the board and the second parameter is the index.\n\n    const moves = history.map((board, move) => {\n      let desc;\n\n      if (move > 0) {\n        const prevBoard = history[move - 1];\n        const {\n          row,\n          col\n        } = findChangedMove(board.squares, prevBoard.squares);\n        desc = 'Go to move #' + move + ' (' + row + ', ' + col + ')';\n      } else {\n        desc = 'Go to game start';\n      }\n\n      const fontWeight = move === this.state.stepNumber ? 'bold' : 'normal';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          style: {\n            fontWeight: fontWeight\n          },\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (this.state.stepNumber === 9) {\n      status = 'Game ends in a draw.';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 172,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nfunction findChangedMove(squares, prevSquares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] !== prevSquares[i]) {\n      const row = Math.floor(i / 3);\n      const col = i % 3;\n      return {\n        row,\n        col\n      };\n    }\n  }\n\n  throw new Error(\"Not possible\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/asta/fun/client/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","PureComponent","renderSquare","i","squares","render","Game","Component","constructor","state","history","Array","fill","stepNumber","xIsNext","date","time","text","shouldComponentUpdate","nextProps","nextState","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","componentDidMount","apiUrl","fetch","then","response","json","data","console","log","Date","Time","Text","catch","error","winner","moves","map","board","move","desc","prevBoard","row","col","findChangedMove","fontWeight","status","document","getElementById","lines","a","b","c","prevSquares","Math","floor","Error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.PureComponent {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      date: \"\",\n      time: \"\",\n      text: \"\",\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.stepNumber !== nextState.stepNumber) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n        return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  componentDidMount() {\n    // const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\n    const apiUrl = 'http://192.168.1.9:3000/test';\n    fetch(apiUrl)\n      .then(response => response.json())\n      // .then(data => this.setState({ data }));\n      .then(data => {\n        console.log('This is your data', data);\n        this.setState({ \n          date: data.Date,\n          time: data.Time,\n          text: data.Text,\n        });\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  } \n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    // Map over each element in the board history.\n    // The first parameter is the board and the second parameter is the index.\n    const moves = history.map((board, move) => {\n      let desc;\n      if (move > 0) {\n        const prevBoard = history[move - 1];\n        const { row, col } = findChangedMove(board.squares, prevBoard.squares);\n        desc = 'Go to move #' + move + ' (' + row + ', ' + col + ')';\n      } else {\n        desc = 'Go to game start';\n      }\n      const fontWeight = move === this.state.stepNumber ? 'bold' : 'normal';\n      return (\n        <li key={move}>\n          <button\n            onClick={() => this.jumpTo(move)}\n            style={{fontWeight : fontWeight}}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (this.state.stepNumber === 9) {\n      status = 'Game ends in a draw.';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{this.state.date}</div>\n          <div>{this.state.time}</div>\n          <div>{this.state.text}</div>\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction findChangedMove(squares, prevSquares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] !== prevSquares[i]) {\n      const row = Math.floor(i / 3);\n      const col = i % 3;\n      return {row, col};\n    }\n  }\n  throw new Error(\"Not possible\");\n}\n\n"]},"metadata":{},"sourceType":"module"}